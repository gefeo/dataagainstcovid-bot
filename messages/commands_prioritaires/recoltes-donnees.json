{
    "command": ["je veux contribuer à la collecte de données", "recolte-donnees"],
    "answer": {
        "blocks": [
            {
                "type": "section",
                "text": {
                    "type": "mrkdwn",
                    "text": "*Premières étapes:*\n1. Créez un compte Github puis connectez-vous\n2. Lisez ce README https://github.com/opencovid19-fr/comment-contribuer\n\n*Vous avez tout lu? Alors continuons*\n1. Consultez les issues sur Github https://github.com/opencovid19-fr/data/issues\n2. Comprenez comment est construite la syntaxe des issues et ce qui est attendu pour résoudre l'issue:\n\n*Si l'issue est de type `ARS Occitanie 20/03`*\n1. Vous devez comprendre qu'il faut rechercher une source de donnée qui traite le cas (ici, un communiqué de l'ARS pour la région Occitanie, datant du 20/03)\n\n*Sinon*\n1. Lisez le corps de l'issue\n2. Posez des questions sur le fil de discussion de l'issue\n3. Posez des question à cet endroit https://app.slack.com/client/TUQTGE7FU/C01057P2R6Z/thread/CV3M7RE8Y-1584729860.262300\n\n*C'est ok? Vous avez compris ce qui est attendu?*\n*Alors il est temps de choisir une issue que vous vous sentez capable de traiter!* \n*Au moindre problème, demandez à community comment contacter un modérateur : *\n```/community je veux parler à un modérateur```\n\n*Une fois votre issue choisie, indiquez en commentaire de l'issue `Je m'en charge`*\n\n*On continue!*\n*Si l'issue était de type `ARS Occitanie 20/03`*\n1. Visitez les sources officielles de donnée (Santé publique France, Agences Régionales de Santé, Préfectures, Ministère des Solidarités et de la Santé)\n2. Recherchez auprès de la source un document relatif à l'issue en cours (PDF, vidéo, HTML...)\n3. Ouvrez le document et concentrez-vous sur les informations chiffrées\n4. Reportez les données dans un bloc de donnée au format YAML (Lisez la doc à ce sujet: https://github.com/opencovid19-fr/data/blob/master/README.md)\n\n*Sinon*\n1. Réalisez les actions nécessaires à la résolution de l'issue en fonction de ce qui est demandé\n\n*Vous y êtes presque :) Il est temps de proposer vos modifications*\n\n*Avant d'aller plus loin, assurez-vous d'avoir réalisé les pré-requis listés ci-dessous*\n    *Si vous n'avez pas encore forké le répertoire `/data`*\n    1. Forkez le répertoire `/data` afin de disposer d'une copie (voici de l'aide : https://help.github.com/en/github/getting-started-with-github/fork-a-repo)\n    *Si vous n'avez pas encore téléchargé le répertoire `/data`* sur votre ordinateur de travail\n    1. Clonez le répertoire `/data` sur votre ordinateur depuis votre version du répertoire (voici de l'aide :  https://help.github.com/en/github/creating-cloning-and-archiving-repositories/cloning-a-repository)\n\n*Maintenant, rendez-vous dans le répertoire /data que vous avez téléchargé sur votre ordinateur*\n\n*Si l'issue était de type `ARS Occitanie 20/03`*\n    1. Rendez-vous dans le sous-repertoire correspondant à la source de donnée (par exemple, dans le cas d'une ARS le bon répertoire est `data/agences-regionales-sante`)\n    2. Rendez-vous dans le sous-sous-répertoire correspondant à la région concernée par l'issue (ici `data/agences-regionales-sante/occitanie`)\n    3. Créez un nouveau fichier en respectant la nomenclature des autres fichiers (Année-Mois-Jour.yaml)\n    4. Copiez/collez, dans ce fichier, le bloc de données YAML préalablement réalisé (celui qui résulte de votre effort de recherche)\n    5. Sauvegardez le fichier. Vérifiez qu'il apparait bien dans le sous-sous-dossier dans lequel vous vous trouvez (dans notre exemple : `data/agences-regionales-sante/occitanie/[monfichierYAML]`\n\n*Sinon (s'il s'agit d'un autre type d'issue)*\n    1. Modifiez les fichiers qui demandent à l'être, selon les spécificités de l'issue dont vous êtes en train de vous occuper\n\n* À partir de là, vous avez fait le plus gros.*\n*Il ne vous reste qu'à partager vos modifications avec les datascientists du Slack.*\n1. Revenez à la racine du dossier /data sur votre ordinateur\n2. Ajoutez les modifications apportées via l'instruction `git add .` (voici de l'aide : https://git-scm.com/docs/git-add)\n3. Enregistrez vos modifications via l'instruction `git commit`. *Attention : au cours du processus il vous sera demandé d'ajouter un message. Celui-ci doit décrire en une ligne les modifications apportées (voici de l'aide : https://git-scm.com/docs/git-commit).* Par exemple, dans notre exemple: ```Ajout ARS Occitanie 2020-03-20``` \n\n*Allez-y, publiez!*\n1. Publiez vos modifications sur votre propre clone du répertoire /data avec la commande via la commande 'git push -u origin master' (voici de l'aide : https://git-scm.com/docs/git-push)\n2. Retournez sur Github, dans votre répertoire /data\n3. Pressez le bouton \"New pull request\"\n4. Validez vos modifications\n5. Lancez la Pull-Request\n\n*Bravo! Vous n'avez plus qu'à attendre qu'une personne du staff valide ou invalide vos modifications.*\n*En attendant, pourriez-vous résoudre une autre issue?* *Merci beaucoup pour votre aide <3*"
                }
            }
        ]
    }
}